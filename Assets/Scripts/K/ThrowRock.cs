using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Photon.Pun;

public class ThrowRock : MonoBehaviourPun
{
    class Bullet
    {

        public float time;
        public Vector3 initialPosition;
        public Vector3 initialVelocity;
        //public TrailRenderer tracer;
        public GameObject Rock;
        //public ParticleSystem projectileEffect;

    }
    [Header("Bullet")]
    public float bulletSpeed = 1000.0f;
    public float bulletDrop = 0.0f;
    List<Bullet> bullets = new List<Bullet>();
    float maxLifeTime = 3.0f;
   

    public bool isFiring = false;
    public int fireRate = 25;

   
   // public WeaponRecoil recoil;
    [SerializeField] private LayerMask shootColliderLayerMask = new LayerMask();
    

    
    public Transform raycastOrigin;
    public ParticleSystem hitEffect;
    public TrailRenderer tracerEffect1;
    public GameObject Rock;
    

   





    Ray ray;
    RaycastHit hitinfo;
    public float accumulatedTime;

    void Awake()
    {
        
    }
    Vector3 GetPosition(Bullet bullet)
    {

        //??? ???
        Vector3 gravity = Vector3.down * bulletDrop;
        //????? ??? ??????? time??? ????? ????? ????? ????? ??????.
        return (bullet.initialPosition) + (bullet.initialVelocity * bullet.time) + (0.5f * gravity * bullet.time * bullet.time);
    }

    //??? ????
    Bullet CreateBullet(Vector3 position, Vector3 velocity, bool createRock)
    {
        //????? ???????.
        Bullet bullet = new Bullet();
        //?????? ????
        bullet.initialPosition = position;
        //???? ??? ?จจ?
        bullet.initialVelocity = velocity;
        //?ฉฃ? 0??? ????
        bullet.time = 0.0f;
        //???? ???? ????, ???????? ????, wwwwwww
       // bullet.tracer = Instantiate(tracerEffect1, position, Quaternion.identity);
       if(createRock)
        bullet.Rock = PhotonNetwork.Instantiate("Rock", position, Quaternion.identity);

        //?????????? ????? ???
        //bullet.tracer.AddPosition(position);

        //???? ????? ???? ????? ?????.
        return bullet;
    }


    public void StartFiring()
    {
        //?????
        isFiring = true;
        if (accumulatedTime > 0.0f)
            accumulatedTime = 0.0f;

        //recoil.Reset();

    }

    public void UpdateWeapon(float deltaTime, Vector3 target, bool createRock)
    {

        if (isFiring)
        {
            UpdateFiring(deltaTime, target, createRock);
        }
        accumulatedTime += deltaTime;

        UpdateBullets(deltaTime);


    }
    public void UpdateFiring(float deltaTime, Vector3 target, bool createRock)
    {

        //??? ????
        float fireInterval = 1.0f / fireRate;
        //?????? 0???? ? ?? ???.
        while (accumulatedTime >= 0.0f)
        {
            //??? ???
            FireBullet(target, createRock);
            //?????? ??? ?????? ??.??? ????? 0???? ??????? ??????? ????????.
            accumulatedTime -= fireInterval;
        }


    }
    //update?? ??? ???? ???? -> ????? ??? ??????? ???????.
    public void UpdateBullets(float deltaTime)
    {
        SimulateBullet(deltaTime);
        DestroyBullets();
    }

    void SimulateBullet(float deltaTime)
    {
        //??? ????
        bullets.ForEach(bullet =>
        {
            //p0??? ????
            Vector3 p0 = GetPosition(bullet);
            //??? time ????. -> ??????? ???? p0???? p1???? ?????? ?.
            bullet.time += deltaTime;
            //p1??? ????
            Vector3 p1 = GetPosition(bullet);
            RaycastSegment(p0, p1, bullet);
        });
    }

    void DestroyBullets()
    {
        //???????(???time?? maxtime?? ?????)
        bullets.RemoveAll(bullet => bullet.time >= maxLifeTime);
    }

    void RaycastSegment(Vector3 start, Vector3 end, Bullet bullet)
    {
        //???? ????
        Vector3 direction = end - start;
        //??? ???? ?????? ??? ???
        float distance = direction.magnitude;
        //ray???????? start.
        ray.origin = start;
        //ray?? ???? ????.
        ray.direction = direction;
        //????? ??? ???? ????? ????? ?????? ????? ?????? ???? ??.
        if (Physics.Raycast(ray, out hitinfo, distance, shootColliderLayerMask))
        {
            //hit??????? ????????
            
            hitEffect.transform.position = hitinfo.point;
            hitEffect.transform.forward = Vector3.up;
           

            //????? ?ฉฃ??? ???ฉฃ????? ?????? ????????? ???.
            bullet.time = maxLifeTime;
            end = hitinfo.point;
        }
       

           


        //??? ?????? ????? ????? ???? ????? ?????? ???. trailrenderer??? ?????? ?????? ??????????.
       // if (bullet.tracer)
            //bullet.tracer.transform.position = end;
        if (bullet.Rock)
            bullet.Rock.transform.position = end;

    }




    private void FireBullet(Vector3 target, bool createRock)
    {
        
       

        //????จจ? ????.
        Vector3 velocity = (target - raycastOrigin.position).normalized * bulletSpeed;

        //????? ????(??????, ????จจ? ????.)
        var bullet = CreateBullet(raycastOrigin.position, velocity, createRock);
        //??? ??????? ??? ???.
        bullets.Add(bullet);
        
      
    }


    public void StopFiring()
    {
        isFiring = false;
    }
}
